package hms;

import java.awt.Desktop;
import java.awt.Font;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Suson
 */
public class ViewPatientFrame extends javax.swing.JFrame {

    Configuration config;
    StopWatch time;

    /**
     * Creates new form view Patient Frame
     */
    public ViewPatientFrame() {
        config = new Configuration();
        config.setIconAndTitle(this, "View Patient");
        initComponents();
        config.addPatientToTable(patientTable);
        setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        searchButtonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        homeButton = new javax.swing.JButton();
        addPatientButton = new javax.swing.JButton();
        addDoctorButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        viewPatientButton = new javax.swing.JButton();
        helpTextButton = new javax.swing.JButton();
        contactButton = new javax.swing.JButton();
        viewDoctorsButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        sortSelector = new javax.swing.JComboBox<>();
        searchLabel = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        searchField = new javax.swing.JTextField();
        searchIcon = new javax.swing.JLabel();
        nameRadio = new javax.swing.JRadioButton();
        ageRadio = new javax.swing.JRadioButton();
        sexRadio = new javax.swing.JRadioButton();
        addressRadio = new javax.swing.JRadioButton();
        doctorRadio = new javax.swing.JRadioButton();
        severityRadio = new javax.swing.JRadioButton();
        tableScrollPane = new javax.swing.JScrollPane();
        patientTable = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        statusLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openMenu = new javax.swing.JMenuItem();
        saveMenu = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        exitMenu = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        aboutMenu = new javax.swing.JMenuItem();
        HelpText = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 0, 0));
        setMinimumSize(new java.awt.Dimension(1920, 1080));
        setResizable(false);

        jPanel1.setMaximumSize(new java.awt.Dimension(450, 1080));
        jPanel1.setMinimumSize(new java.awt.Dimension(450, 1080));
        jPanel1.setPreferredSize(new java.awt.Dimension(450, 1080));

        homeButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        homeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/dashboard.png"))); // NOI18N
        homeButton.setText("Home Page");
        homeButton.setActionCommand("  Manage Patients");
        homeButton.setAlignmentY(0.0F);
        homeButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 240, 240)), javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 240, 240))));
        homeButton.setBorderPainted(false);
        homeButton.setFocusPainted(false);
        homeButton.setFocusable(false);
        homeButton.setMargin(new java.awt.Insets(0, 14, 0, 14));
        homeButton.setMaximumSize(new java.awt.Dimension(180, 60));
        homeButton.setMinimumSize(new java.awt.Dimension(180, 60));
        homeButton.setPreferredSize(new java.awt.Dimension(180, 60));
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        addPatientButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addPatientButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/add.png"))); // NOI18N
        addPatientButton.setText(" Add Patient");
        addPatientButton.setAlignmentY(0.0F);
        addPatientButton.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        addPatientButton.setBorderPainted(false);
        addPatientButton.setFocusPainted(false);
        addPatientButton.setFocusable(false);
        addPatientButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        addPatientButton.setMargin(new java.awt.Insets(0, 14, 0, 14));
        addPatientButton.setMaximumSize(new java.awt.Dimension(180, 60));
        addPatientButton.setMinimumSize(new java.awt.Dimension(180, 60));
        addPatientButton.setPreferredSize(new java.awt.Dimension(180, 60));
        addPatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPatientButtonActionPerformed(evt);
            }
        });

        addDoctorButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addDoctorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/student (1).png"))); // NOI18N
        addDoctorButton.setText("  Add Doctor");
        addDoctorButton.setActionCommand("     Add Doctor");
        addDoctorButton.setAlignmentY(0.0F);
        addDoctorButton.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        addDoctorButton.setBorderPainted(false);
        addDoctorButton.setFocusPainted(false);
        addDoctorButton.setFocusable(false);
        addDoctorButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        addDoctorButton.setMargin(new java.awt.Insets(0, 14, 0, 14));
        addDoctorButton.setMaximumSize(new java.awt.Dimension(180, 60));
        addDoctorButton.setMinimumSize(new java.awt.Dimension(180, 60));
        addDoctorButton.setPreferredSize(new java.awt.Dimension(180, 60));
        addDoctorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDoctorButtonActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setMaximumSize(new java.awt.Dimension(363, 278));
        jPanel3.setMinimumSize(new java.awt.Dimension(363, 278));
        jPanel3.setPreferredSize(new java.awt.Dimension(450, 278));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/minsss.jpg"))); // NOI18N
        jLabel2.setPreferredSize(new java.awt.Dimension(180, 47));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88))
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        viewPatientButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        viewPatientButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/addDetails.png"))); // NOI18N
        viewPatientButton.setText(" View Patient");
        viewPatientButton.setAlignmentY(0.0F);
        viewPatientButton.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        viewPatientButton.setBorderPainted(false);
        viewPatientButton.setFocusPainted(false);
        viewPatientButton.setFocusable(false);
        viewPatientButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        viewPatientButton.setMargin(new java.awt.Insets(0, 14, 0, 14));
        viewPatientButton.setMaximumSize(new java.awt.Dimension(180, 60));
        viewPatientButton.setMinimumSize(new java.awt.Dimension(180, 60));
        viewPatientButton.setPreferredSize(new java.awt.Dimension(180, 60));
        viewPatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewPatientButtonActionPerformed(evt);
            }
        });

        helpTextButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        helpTextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/manual.png"))); // NOI18N
        helpTextButton.setText("      Help Text");
        helpTextButton.setAlignmentY(0.0F);
        helpTextButton.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        helpTextButton.setBorderPainted(false);
        helpTextButton.setFocusPainted(false);
        helpTextButton.setFocusable(false);
        helpTextButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        helpTextButton.setMargin(new java.awt.Insets(0, 14, 0, 14));
        helpTextButton.setMaximumSize(new java.awt.Dimension(180, 60));
        helpTextButton.setMinimumSize(new java.awt.Dimension(180, 60));
        helpTextButton.setPreferredSize(new java.awt.Dimension(180, 60));
        helpTextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpTextButtonActionPerformed(evt);
            }
        });

        contactButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        contactButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/contact.png"))); // NOI18N
        contactButton.setAlignmentY(0.0F);
        contactButton.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        contactButton.setBorderPainted(false);
        contactButton.setFocusPainted(false);
        contactButton.setFocusable(false);
        contactButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        contactButton.setLabel("      Contact Us");
        contactButton.setMargin(new java.awt.Insets(0, 14, 0, 14));
        contactButton.setMaximumSize(new java.awt.Dimension(180, 60));
        contactButton.setMinimumSize(new java.awt.Dimension(180, 60));
        contactButton.setPreferredSize(new java.awt.Dimension(180, 60));
        contactButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactButtonActionPerformed(evt);
            }
        });

        viewDoctorsButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        viewDoctorsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/doc.png"))); // NOI18N
        viewDoctorsButton.setText(" View Doctors");
        viewDoctorsButton.setAlignmentY(0.0F);
        viewDoctorsButton.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        viewDoctorsButton.setBorderPainted(false);
        viewDoctorsButton.setFocusPainted(false);
        viewDoctorsButton.setFocusable(false);
        viewDoctorsButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        viewDoctorsButton.setMargin(new java.awt.Insets(0, 14, 0, 14));
        viewDoctorsButton.setMaximumSize(new java.awt.Dimension(180, 60));
        viewDoctorsButton.setMinimumSize(new java.awt.Dimension(180, 60));
        viewDoctorsButton.setPreferredSize(new java.awt.Dimension(180, 60));
        viewDoctorsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDoctorsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addPatientButton, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addDoctorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewPatientButton, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(helpTextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contactButton, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewDoctorsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addPatientButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addDoctorButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewPatientButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewDoctorsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 226, Short.MAX_VALUE)
                .addComponent(helpTextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contactButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );

        jPanel4.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.darkShadow"));

        jPanel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 0, true));
        jPanel5.setPreferredSize(new java.awt.Dimension(2079, 70));

        sortSelector.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        sortSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "    None", "    Name", "    Age", "    Sex", "    Address", "    Severity", "    Doctor" }));
        sortSelector.setAutoscrolls(true);
        sortSelector.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        sortSelector.setMaximumSize(new java.awt.Dimension(80, 25));
        sortSelector.setMinimumSize(new java.awt.Dimension(80, 25));
        sortSelector.setOpaque(false);
        sortSelector.setPreferredSize(new java.awt.Dimension(80, 25));
        sortSelector.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sortSelectorItemStateChanged(evt);
            }
        });
        sortSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortSelectorActionPerformed(evt);
            }
        });

        searchLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        searchLabel.setText("Sort By :");

        searchButton.setBackground(new java.awt.Color(76, 175, 80));
        searchButton.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        searchButton.setText("Search");
        searchButton.setMaximumSize(new java.awt.Dimension(80, 25));
        searchButton.setMinimumSize(new java.awt.Dimension(80, 25));
        searchButton.setPreferredSize(new java.awt.Dimension(80, 25));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        searchField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        searchField.setText("Type keyword and select what to search..");
        searchField.setBorder(null);
        searchField.setMinimumSize(new java.awt.Dimension(80, 25));
        searchField.setPreferredSize(new java.awt.Dimension(80, 25));
        searchField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchFieldMouseClicked(evt);
            }
        });
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });

        searchIcon.setBackground(new java.awt.Color(255, 255, 255));
        searchIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search.png"))); // NOI18N
        searchIcon.setOpaque(true);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addComponent(searchIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(searchIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        searchButtonGroup.add(nameRadio);
        nameRadio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nameRadio.setText("Name");
        nameRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameRadioActionPerformed(evt);
            }
        });

        searchButtonGroup.add(ageRadio);
        ageRadio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ageRadio.setText("Age");
        ageRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageRadioActionPerformed(evt);
            }
        });

        searchButtonGroup.add(sexRadio);
        sexRadio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        sexRadio.setText("Sex");
        sexRadio.setMaximumSize(new java.awt.Dimension(65, 25));
        sexRadio.setMinimumSize(new java.awt.Dimension(65, 25));
        sexRadio.setPreferredSize(new java.awt.Dimension(65, 25));
        sexRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sexRadioActionPerformed(evt);
            }
        });

        searchButtonGroup.add(addressRadio);
        addressRadio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addressRadio.setText("Address");

        searchButtonGroup.add(doctorRadio);
        doctorRadio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        doctorRadio.setText("Doctor");
        doctorRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorRadioActionPerformed(evt);
            }
        });

        searchButtonGroup.add(severityRadio);
        severityRadio.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        severityRadio.setText("Severity");
        severityRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                severityRadioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameRadio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ageRadio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sexRadio, javax.swing.GroupLayout.PREFERRED_SIZE, 61, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addressRadio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(severityRadio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doctorRadio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(27, 27, 27)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(searchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(sortSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(sortSelector, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGap(13, 13, 13)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(sexRadio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nameRadio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ageRadio)
                                .addComponent(addressRadio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(severityRadio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(doctorRadio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(12, 12, 12))))
                .addGap(170, 170, 170))
        );

        patientTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        patientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Age", "Sex", "Address", "Severity", "Doctor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patientTable.setAlignmentX(2.0F);
        patientTable.setAlignmentY(2.0F);
        patientTable.setGridColor(new java.awt.Color(0, 0, 0));
        patientTable.setRowHeight(30);
        patientTable.setRowMargin(2);
        patientTable.getTableHeader().setResizingAllowed(false);
        patientTable.getTableHeader().setReorderingAllowed(false);
        patientTable.getTableHeader().setFont(new Font("Serif", Font.BOLD, 20));
        tableScrollPane.setViewportView(patientTable);
        if (patientTable.getColumnModel().getColumnCount() > 0) {
            patientTable.getColumnModel().getColumn(0).setResizable(false);
            patientTable.getColumnModel().getColumn(1).setResizable(false);
            patientTable.getColumnModel().getColumn(2).setResizable(false);
            patientTable.getColumnModel().getColumn(3).setResizable(false);
            patientTable.getColumnModel().getColumn(4).setResizable(false);
            patientTable.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 1456, Short.MAX_VALUE)
            .addComponent(tableScrollPane)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        jPanel7.setBackground(new java.awt.Color(69, 123, 157));

        statusLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        statusLabel.setForeground(new java.awt.Color(255, 255, 255));
        statusLabel.setText(" ");
        statusLabel.setToolTipText("");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 1247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(197, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu1.setText("File");

        openMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Open.png"))); // NOI18N
        openMenu.setText("Open");
        openMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuActionPerformed(evt);
            }
        });
        jMenu1.add(openMenu);

        saveMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Save.png"))); // NOI18N
        saveMenu.setText("Save");
        saveMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuActionPerformed(evt);
            }
        });
        jMenu1.add(saveMenu);
        jMenu1.add(jSeparator1);

        exitMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        exitMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Exit resize.png"))); // NOI18N
        exitMenu.setText("Exit");
        exitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuActionPerformed(evt);
            }
        });
        jMenu1.add(exitMenu);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        aboutMenu.setText("About Us");
        aboutMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuActionPerformed(evt);
            }
        });
        jMenu2.add(aboutMenu);

        HelpText.setText("Help Text");
        HelpText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelpTextActionPerformed(evt);
            }
        });
        jMenu2.add(HelpText);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 935, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * This method sorts and add the sorted array to the list
     *
     * @param selected the parameter with which search is taking place
     */
    private void sortPatient(String selected) {

        String[] allDetails = new String[Configuration.patientList.size() * 6]; // just so we copy all the values into this array in order.
        String[] array = config.copyPatientToTempList(Configuration.patientList, selected);
        String[] sorted;
        if (selected.equals("Age")) {
            int[] updated = config.stringToIntArray(array);
            IntegerSort sort = new IntegerSort(updated);
            sorted = config.intToStringArray(sort.getSortedArray());
        } else {
            StringSort sort = new StringSort(array);
            sorted = sort.getSortedArray();
        }

        System.out.println(Arrays.toString(array));

        // copying all the details 
        int counter = 0;
        for (Patient pat : Configuration.patientList) {
            allDetails[counter] = pat.getName();
            allDetails[counter + 1] = Integer.toString(pat.getAge());
            allDetails[counter + 2] = pat.getSex();
            allDetails[counter + 3] = pat.getAddress();
            allDetails[counter + 4] = pat.getSeverity();
            allDetails[counter + 5] = pat.getDoctor().getName();
            counter += 6;
        }

        ArrayList<Patient> tempList = new ArrayList<>();

        Doctor dc = null;
        for (int i = 0; i < sorted.length; i++) {  // for iterating through sorted list
            for (int j = 0; j < allDetails.length; j++) { // for iterating through all details list
                if (allDetails[j].equals(sorted[i])) { // checking each element for match
                    if (selected.equals("Name")) {
                        for (Patient pa : Configuration.patientList) {
                            if (allDetails[j + 5].equals(pa.getDoctor().getName())) {
                                dc = pa.getDoctor();
                            }
                        }
                        if (!tempList.contains(new Patient(allDetails[j], Integer.parseInt(allDetails[j + 1]), allDetails[j + 2], allDetails[j + 3], allDetails[j + 4], dc))) {
                            tempList.add(new Patient(allDetails[j], Integer.parseInt(allDetails[j + 1]), allDetails[j + 2], allDetails[j + 3], allDetails[j + 4], dc));
                        }
                    } else if (selected.equals("Age")) {
                        for (Patient pa : Configuration.patientList) {
                            if (allDetails[j + 4].equals(pa.getDoctor().getName())) {
                                dc = pa.getDoctor();
                            }
                        }

                        Patient newPatient = new Patient(allDetails[j - 1], Integer.parseInt(allDetails[j]), allDetails[j + 1], allDetails[j + 2], allDetails[j + 3], dc);
                        if (!tempList.contains(newPatient)) {
                            tempList.add(newPatient);
                        }

                    } else if (selected.equals("Sex")) {
                        for (Patient pa : Configuration.patientList) {
                            if (allDetails[j + 3].equals(pa.getDoctor().getName())) {

                                dc = pa.getDoctor();
                            }
                        }
                        if (!tempList.contains(new Patient(allDetails[j - 2], Integer.parseInt(allDetails[j - 1]), allDetails[j], allDetails[j + 1], allDetails[j + 2], dc))) {
                            tempList.add(new Patient(allDetails[j - 2], Integer.parseInt(allDetails[j - 1]), allDetails[j], allDetails[j + 1], allDetails[j + 2], dc));
                        }
                    } else if (selected.equals("Address")) {
                        for (Patient pa : Configuration.patientList) {
                            if (allDetails[j + 2].equals(pa.getDoctor().getName())) {

                                dc = pa.getDoctor();
                            }
                        }
                        if (!tempList.contains(new Patient(allDetails[j - 3], Integer.parseInt(allDetails[j - 2]), allDetails[j - 1], allDetails[j], allDetails[j + 1], dc))) {
                            tempList.add(new Patient(allDetails[j - 3], Integer.parseInt(allDetails[j - 2]), allDetails[j - 1], allDetails[j], allDetails[j + 1], dc));
                        }
                    } else if (selected.equals("Severity")) {
                        for (Patient pa : Configuration.patientList) {
                            if (allDetails[j + 1].equals(pa.getDoctor().getName())) {

                                dc = pa.getDoctor();
                            }
                        }
                        if (!tempList.contains(new Patient(allDetails[j - 4], Integer.parseInt(allDetails[j - 3]), allDetails[j - 2], allDetails[j - 1], allDetails[j], dc))) {
                            tempList.add(new Patient(allDetails[j - 4], Integer.parseInt(allDetails[j - 3]), allDetails[j - 2], allDetails[j - 1], allDetails[j], dc));
                        }
                    } else if (selected.equals("Doctor")) {
                        for (Patient pa : Configuration.patientList) {
                            if (allDetails[j].equals(pa.getDoctor().getName())) {

                                dc = pa.getDoctor();
                            }
                        }
                        if (!tempList.contains(new Patient(allDetails[j - 5], Integer.parseInt(allDetails[j - 4]), allDetails[j - 3], allDetails[j - 2], allDetails[j - 1], dc))) {
                            tempList.add(new Patient(allDetails[j - 5], Integer.parseInt(allDetails[j - 4]), allDetails[j - 3], allDetails[j - 2], allDetails[j - 1], dc));
                        }
                    }

                }

            }

        }

        Configuration.patientList = (ArrayList<Patient>) tempList.clone();

    }

    /**
     * This method searches the patient in the system
     *
     * @param selected parameter according to which search will be performed
     */
    private void searchPatient(String selected) {
        time = new StopWatch();
        String keyword = searchField.getText();
        // validating if searchbox is empty or there is placeholder still

        String[] tempList = new String[Configuration.patientList.size()];
        if (!(keyword.isEmpty() || keyword.contains("Type")) && (!selected.isEmpty())) {
            String[] allDetails = new String[Configuration.patientList.size() * 6]; // just so we copy all the values into this array in order.
            String[] array = config.copyPatientToTempList(Configuration.patientList, selected);
            StringSort sort = new StringSort(array);
            String[] sorted = sort.getSortedArray();
            StringSearch search = new StringSearch(sorted, keyword);
            int index = search.getFoundIndex();

            // copying all the details 
            int counter = 0;
            for (Patient pat : Configuration.patientList) {
                allDetails[counter] = pat.getName();
                allDetails[counter + 1] = Integer.toString(pat.getAge());
                allDetails[counter + 2] = pat.getSex();
                allDetails[counter + 3] = pat.getAddress();
                allDetails[counter + 4] = pat.getSeverity();
                allDetails[counter + 5] = pat.getDoctor().getName();
                counter += 6;
            }

            // if found index is greater than 0(if it is less than error)
            if (index >= 0) {
                int count = 0;
                for (String names : allDetails) {
                    if (sorted[index].equals(names)) {
                        break;
                    }
                    count++;

                }//0    1    2     3       4      5       6   7   8     9       10      11    
                //[name,age,sex,address,severity,doctor,name,age,sex,address,severity,doctor,name,age,sex,address,severity,doctor]
                time.stop();
                if (selected.equals("Name")) {

                    JOptionPane.showMessageDialog(rootPane, "Name : " + allDetails[count]
                            + "\n " + "Age : " + allDetails[count + 1] + "\n " + "Sex : " + allDetails[count + 2]
                            + "\n " + "Address : " + allDetails[count + 3] + "\n " + "Severity : " + allDetails[count + 4]
                            + "\n " + "Doctor : " + allDetails[count + 5], "Found",
                            JOptionPane.INFORMATION_MESSAGE);
                } else if (selected.equals("Age")) {
                    JOptionPane.showMessageDialog(rootPane, "Name : " + allDetails[count - 1]
                            + "\n " + "Age : " + allDetails[count] + "\n " + "Sex : " + allDetails[count + 1]
                            + "\n " + "Address : " + allDetails[count + 2] + "\n " + "Severity : " + allDetails[count + 3]
                            + "\n " + "Doctor : " + allDetails[count + 4], "Found",
                            JOptionPane.INFORMATION_MESSAGE);
                } else if (selected.equals("Sex")) {
                    JOptionPane.showMessageDialog(rootPane, "Name : " + allDetails[count - 2]
                            + "\n " + "Age : " + allDetails[count - 1] + "\n " + "Sex : " + allDetails[count]
                            + "\n " + "Address : " + allDetails[count + 1] + "\n " + "Severity : " + allDetails[count + 2]
                            + "\n " + "Doctor : " + allDetails[count + 3], "Found",
                            JOptionPane.INFORMATION_MESSAGE);
                } else if (selected.equals("Address")) {
                    JOptionPane.showMessageDialog(rootPane, "Name : " + allDetails[count - 3]
                            + "\n " + "Age : " + allDetails[count - 2] + "\n " + "Sex : " + allDetails[count - 1]
                            + "\n " + "Address : " + allDetails[count] + "\n " + "Severity : " + allDetails[count + 1]
                            + "\n " + "Doctor : " + allDetails[count + 2], "Found",
                            JOptionPane.INFORMATION_MESSAGE);
                } else if (selected.equals("Severity")) {
                    JOptionPane.showMessageDialog(rootPane, "Name : " + allDetails[count - 4]
                            + "\n " + "Age : " + allDetails[count - 3] + "\n " + "Sex : " + allDetails[count - 2]
                            + "\n " + "Address : " + allDetails[count - 1] + "\n " + "Severity : " + allDetails[count]
                            + "\n " + "Doctor : " + allDetails[count + 1], "Found",
                            JOptionPane.INFORMATION_MESSAGE);
                } else if (selected.equals("Doctor")) {
                    JOptionPane.showMessageDialog(rootPane, "Name : " + allDetails[count - 5]
                            + "\n " + "Age : " + allDetails[count - 4] + "\n " + "Sex : " + allDetails[count - 3]
                            + "\n " + "Address : " + allDetails[count - 2] + "\n " + "Severity : " + allDetails[count - 1]
                            + "\n " + "Doctor : " + allDetails[count], "Found",
                            JOptionPane.INFORMATION_MESSAGE);
                }

            } else {
                time.stop();
                JOptionPane.showMessageDialog(rootPane, "Nothing Found! Please change the keyword. ", "Error", JOptionPane.ERROR_MESSAGE);

            }

        } else {
            time.stop();
            JOptionPane.showMessageDialog(rootPane, "Please type the keyword and click on the radio button to search", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * This method lunches new patient frame and hides the current frame.
     *
     * @param evt
     */
    private void addPatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPatientButtonActionPerformed
        // TODO add your handling code here:
        new AddPatientFrame();
        setVisible(false);
    }//GEN-LAST:event_addPatientButtonActionPerformed
    /**
     * This method lunches main frame and close the current frame after few
     * milli-seconds.
     *
     * @param evt
     */
    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        // TODO add your handling code here:
        new MainFrame().setVisible(true);
        Configuration config = new Configuration();
        config.closeFrameAfer(this);
    }//GEN-LAST:event_homeButtonActionPerformed

    /**
     * This method lunches new add doctor frame and hides the current frame.
     *
     * @param evt
     */
    private void addDoctorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDoctorButtonActionPerformed
        // TODO add your handling code here:
        new AddDoctorFrame();
        setVisible(false);
    }//GEN-LAST:event_addDoctorButtonActionPerformed

    private void viewPatientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewPatientButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_viewPatientButtonActionPerformed
    /**
     * This frame lunches the help manual for the page within the frame.
     *
     * @param evt
     */
    private void helpTextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpTextButtonActionPerformed
        // TODO add your handling code here:
        config.DisplayHelpPDF(this);
    }//GEN-LAST:event_helpTextButtonActionPerformed
    /**
     * This button opens the about us frame and closes itself after few
     * milliseconds
     *
     * @param evt
     */
    private void contactButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactButtonActionPerformed
        // TODO add your handling code here:
        new AboutUsFrame();
        setVisible(false);
    }//GEN-LAST:event_contactButtonActionPerformed
    /**
     * This method lunches new doctor frame and hides the current frame.
     *
     * @param evt
     */
    private void viewDoctorsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDoctorsButtonActionPerformed
        // TODO add your handling code here:
        new ViewDoctorsFrame();
        setVisible(false);
    }//GEN-LAST:event_viewDoctorsButtonActionPerformed

    private void sortSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortSelectorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sortSelectorActionPerformed

    private void nameRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameRadioActionPerformed

    private void ageRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageRadioActionPerformed
    /**
     * Clears the field when mouse is clicked
     *
     * @param evt
     */
    private void searchFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchFieldMouseClicked
        // TODO add your handling code here:
        searchField.setText("");
    }//GEN-LAST:event_searchFieldMouseClicked

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed
    /**
     * This method selects what is being searched and performs the search
     * accordingly.
     *
     * @param evt
     */
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        String selected = "";
        if (nameRadio.isSelected()) {
            selected = "Name";
        } else if (ageRadio.isSelected()) {
            selected = "Age";
        } else if (sexRadio.isSelected()) {
            selected = "Sex";
        } else if (addressRadio.isSelected()) {
            selected = "Address";
        } else if (severityRadio.isSelected()) {
            selected = "Severity";
        } else if (doctorRadio.isSelected()) {
            selected = "Doctor";
        }
        if (!selected.isEmpty()) {
            StopWatch watch = new StopWatch();
            sortPatient(selected);
            watch.stop();
            config.addPatientToTable(patientTable);
            searchPatient(selected);
            String keyword = searchField.getText();

            statusLabel.setText("That sort and search took "
                    + (watch.timeElapsed() + time.timeElapsed())
                    + " ms for " + Configuration.patientList.size()
                    + " total entries. " + (config.moreOnPatientList(keyword, selected)) + " more similar entries found on same categeory.");

        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void sexRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sexRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sexRadioActionPerformed
    /**
     * This events initializes the sort according to the data stored.
     *
     * @param evt
     */
    private void sortSelectorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sortSelectorItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == (java.awt.event.ItemEvent.DESELECTED)) { // checking if event is selected or deselected.
            // if state is changed and is deselected then the code will rull.
            String selected = sortSelector.getSelectedItem().toString().trim(); // trimming to remove excess white space
            if (!selected.equals("None")) {
                StopWatch watch = new StopWatch();
                sortPatient(selected);
                watch.stop();
                statusLabel.setText("That sort took " + watch.timeElapsed() + " ms for " + Configuration.doctorList.size() + " total entries.");
            }

        }

        config.addPatientToTable(patientTable);
    }//GEN-LAST:event_sortSelectorItemStateChanged

    private void doctorRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorRadioActionPerformed

    private void severityRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_severityRadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_severityRadioActionPerformed
    /**
     * this is a file chooser which opens the file chooser.
     *
     * @param evt
     */
    private void openMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        int r = chooser.showOpenDialog(openMenu);
        if (r == JFileChooser.APPROVE_OPTION) {
            try {
                Desktop.getDesktop().open(chooser.getSelectedFile());
            } catch (IOException e1) {
                JOptionPane.showMessageDialog(openMenu, "Could not open file " + chooser.getSelectedFile().getAbsolutePath());
            }
        }
    }//GEN-LAST:event_openMenuActionPerformed
    /**
     * This menu item which launches the help PDF inside within the program
     *
     * @param evt
     */
    private void HelpTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelpTextActionPerformed
        // TODO add your handling code here:
        config.DisplayHelpPDF(this);
    }//GEN-LAST:event_HelpTextActionPerformed
    /**
     * This method lunches about us frame and hides the current frame.
     *
     * @param evt
     */
    private void aboutMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuActionPerformed
        // TODO add your handling code here:
        new AboutUsFrame();
        setVisible(false);
    }//GEN-LAST:event_aboutMenuActionPerformed

    private void saveMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveMenuActionPerformed
    /**
     * This is menu item which closes the frame
     *
     * @param evt
     */
    private void exitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitMenuActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem HelpText;
    private javax.swing.JMenuItem aboutMenu;
    private javax.swing.JButton addDoctorButton;
    private javax.swing.JButton addPatientButton;
    private javax.swing.JRadioButton addressRadio;
    private javax.swing.JRadioButton ageRadio;
    private javax.swing.JButton contactButton;
    private javax.swing.JRadioButton doctorRadio;
    private javax.swing.JMenuItem exitMenu;
    private javax.swing.JButton helpTextButton;
    private javax.swing.JButton homeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JRadioButton nameRadio;
    private javax.swing.JMenuItem openMenu;
    private javax.swing.JTable patientTable;
    private javax.swing.JMenuItem saveMenu;
    private javax.swing.JButton searchButton;
    private javax.swing.ButtonGroup searchButtonGroup;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel searchIcon;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JRadioButton severityRadio;
    private javax.swing.JRadioButton sexRadio;
    private javax.swing.JComboBox<String> sortSelector;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JButton viewDoctorsButton;
    private javax.swing.JButton viewPatientButton;
    // End of variables declaration//GEN-END:variables
}
